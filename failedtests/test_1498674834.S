// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x13, test_memory+518
	addi x22, x0, 20
	addi x27, x0, 1251
	xor x15, x22, x22
	addi x1, x27, 1663
	addi x4, x0, 548
	andi x6, x10, 853
	addi x18, x0, 1
	addi x5, x0, 0
	addi x12, x0, 1832
	bltu x1, x27, crash_forward
	addi x11, x21, 1236
	addi x19, x0, 1364
	sltu x28, x25, x25
	la x30, test_memory+1373
	addi x20, x4, 743
	addi x8, x0, 1
	bltu x9, x9, crash_forward
	lhu x7, -1135(x30)
	addi x29, x0, 0
	bne x5, x29, crash_backward
	la x10, test_memory+1219
	addi x27, x0, -720
	sll x18, x18, 63
	addi x2, x19, 997
	addi x3, x0, -1
	xor x3, x3, x18
	sll x8, x8, 63
	and x26, x2, x3
	addi x25, x0, 373
	or x24, x15, x18
	subw x20, x13, x13
	addi x31, x12, 1472
	addi x7, x0, -536
	la x11, test_memory-455
	lbu x17, 262(x13)
	addi x1, x0, 797
	addi x22, x0, 1996
	lhu x14, -299(x10)
	or x6, x1, x22
	srlw x6, x11, x4
	subw x21, x25, x25
	addw x20, x28, x25
	bgeu x26, x24, crash_backward
	sb x20, 707(x11)
	bltu x31, x12, crash_forward
	addi x30, x7, -1942
	addi x9, x0, -1
	la x10, test_memory-714
	addi x17, x0, 0
	addi x22, x0, 0
	addi x5, x0, -545
	addi x2, x0, -1842
	srai x29, x18, 33
	slt x19, x5, x2
	srli x1, x0, 24
	sll x3, x31, x31
	lui x4, 1033433
	la x14, test_memory+972
	sd x16, -948(x14)
	srli x13, x9, 29
	xor x9, x9, x8
	sll x31, x5, x16
	la x2, test_memory+2542
	addi x18, x0, 1032
	and x16, x18, x9
	addi x6, x0, -1620
	addi x29, x0, 1122
	sh x9, 1134(x10)
	slt x7, x22, x22
	addw x30, x29, x29
	la x11, test_memory+457
	addi x4, x0, 1999
	addi x28, x0, -1124
	slt x29, x4, x4
	la x12, test_memory+267
	addi x31, x0, -1823
	blt x0, x0, crash_backward
	la x24, test_memory-1144
	addi x10, x0, -768
	addi x17, x0, 1180
	srlw x15, x27, x28
	sub x13, x31, x1
	sub x7, x10, x10
	sra x3, x17, x17
	lh x19, -161(x11)
	lh x21, 1462(x24)
	sd x29, 613(x12)
	or x23, x26, x8
	or x25, x18, x18
	sd x9, -1998(x2)
	addi x30, x0, -1271
	bltu x23, x16, crash_forward
	srlw x14, x31, x30
	addi x20, x0, 1273
	sltu x5, x6, x20
	srlw x26, x16, x16
	la x22, test_memory+2769
	lbu x1, -1933(x22)
	addi x12, x0, 1884
	addi x10, x0, -2025
	srai x11, x6, 0
	la x13, test_memory-111
	srliw x19, x14, 1
	addi x26, x0, 166
	slliw x24, x6, 7
	bne x26, x26, crash_forward
	xor x27, x21, x21
	la x19, test_memory+77
	sll x9, x4, x4
	addi x3, x0, 0
	addiw x11, x21, -1788
	lw x6, 3(x19)
	addi x15, x0, -607
	addi x14, x0, 648
	sltu x20, x21, x21
	addi x28, x0, -951
	addi x23, x0, 0
	sll x21, x25, x25
	xor x4, x12, x15
	addi x11, x0, 631
	addi x20, x11, 161
	slt x2, x14, x28
	sraiw x16, x13, 30
	addi x30, x0, -408
	addi x17, x30, -272
	beq x30, x17, crash_backward
	ori x4, x2, -99
	la x29, test_memory+937
	la x18, test_memory-1248
	xor x7, x10, x10
	la x19, test_memory-931
	sraw x9, x27, x7
	add x21, x10, x14
	addi x31, x26, 422
	bltu x31, x26, crash_forward
	sb x15, 734(x13)
	la x2, test_memory-498
	addi x25, x0, -619
	sraiw x26, x11, 0
	la x10, test_memory+2351
	addi x24, x0, 1
	xor x22, x25, x25
	sh x5, 1892(x18)
	addi x15, x0, 1893
	addi x6, x0, -70
	addi x16, x0, -1856
	addi x9, x0, 0
	sra x12, x15, x6
	la x11, test_memory-1652
	sw x27, 1443(x19)
	addw x21, x16, x16
	sh x8, 2046(x11)
	sraw x17, x4, x30
	lhu x13, 1316(x2)
	addi x30, x0, 1708
	addi x17, x0, 0
	sraw x19, x28, x3
	addi x4, x0, 1265
	and x28, x30, x30
	bltu x31, x31, crash_forward
	addi x13, x0, 0
	sll x24, x24, 63
	lh x8, -291(x29)
	addi x6, x0, 1
	addi x3, x4, 472
	addi x14, x0, 0
	la x31, test_memory+1959
	bne x17, x13, crash_forward
	sll x6, x6, 63
	and x21, x8, x8
	la x15, test_memory+2343
	lb x23, -1152(x31)
	addi x16, x0, -1
	srliw x8, x27, 6
	addi x26, x0, 1
	sll x26, x26, 63
	blt x9, x14, crash_forward
	addi x28, x0, 1
	sll x28, x28, 63
	lui x18, 932679
	addi x1, x0, -1
	sh x20, -1741(x15)
	addi x19, x0, -1
	sraw x3, x4, x4
	ld x20, -1959(x10)
	sll x14, x6, x6
	addi x18, x0, -1590
	subw x8, x18, x18
	addi x31, x0, 1
	sub x30, x2, x5
	addi x17, x0, 502
	xor x19, x19, x28
	sra x4, x17, x17
	and x29, x24, x19
	la x14, test_memory+1039
	la x3, test_memory-1777
	xor x16, x16, x6
	lui x4, 53858
	la x18, test_memory+714
	la x17, test_memory+1769
	sd x27, -849(x17)
	or x13, x29, x28
	addi x25, x0, -1
	la x15, test_memory-721
	sub x21, x8, x21
	la x20, test_memory-1033
	xor x25, x25, x26
	sll x31, x31, 63
	and x2, x0, x16
	or x12, x2, x6
	bge x12, x2, crash_backward
	ld x30, -767(x14)
	xor x1, x1, x24
	lb x11, 1991(x3)
	sw x0, -438(x18)
	and x22, x31, x25
	addi x23, x0, -1
	or x7, x22, x26
	xor x23, x23, x31
	bltu x7, x22, crash_forward
	sb x30, 1096(x15)
	addi x7, x0, 0
	and x5, x24, x1
	and x10, x6, x23
	addi x29, x0, 0
	addw x14, x2, x2
	addi x18, x0, 0
	srl x12, x9, x9
	addi x26, x0, 351
	sb x13, 1244(x20)
	subw x30, x2, x2
	addi x4, x0, 2030
	bltu x7, x29, crash_forward
	la x15, test_memory+685
	or x9, x26, x31
	or x27, x22, x24
	sw x0, -29(x15)
	sraw x21, x26, x26
	beq x5, x27, crash_backward
	addi x22, x0, 0
	addi x16, x0, -1026
	la x8, test_memory+2158
	lh x13, -1290(x8)
	addi x19, x16, -1813
	sra x25, x4, x4
	la x2, test_memory-1372
	lwu x28, 1892(x2)
	addw x17, x15, x10
	la x29, test_memory-358
	xori x3, x16, -968
	addi x9, x0, -966
	lh x15, 926(x29)
	addi x6, x0, 1
	subw x22, x9, x9
	addi x28, x0, 1673
	add x13, x30, x15
	la x1, test_memory+465
	sb x24, 124(x1)
	sll x6, x6, 63
	and x8, x22, x13
	subw x11, x19, x18
	la x7, test_memory+645
	addi x24, x0, 1329
	addi x4, x0, -1271
	sub x10, x4, x4
	and x21, x8, x29
	addi x19, x0, 551
	addi x11, x0, -1087
	addi x4, x11, -1317
	beq x11, x4, crash_forward
	add x14, x19, x19
	addi x2, x0, -1322
	la x10, test_memory-511
	addi x22, x24, 1098
	addi x13, x0, 226
	addi x3, x0, -1382
	bgeu x24, x22, crash_forward
	addw x9, x2, x3
	addi x20, x0, -1
	sh x3, -261(x7)
	xor x20, x20, x6
	addi x30, x0, -1223
	lw x21, 599(x10)
	addi x16, x0, 0
	addi x26, x0, -196
	slt x8, x13, x30
	subw x25, x28, x26
	addi x31, x0, 1
	sll x31, x31, 63
	and x18, x30, x20
	addi x12, x0, -1
	addi x17, x0, 0
	sltu x19, x5, x12
	la x21, test_memory-644
	la x4, test_memory+945
	srl x7, x10, x10
	or x27, x0, x6
	sub x29, x23, x23
	xor x12, x12, x31
	blt x0, x0, crash_forward
	lbu x14, 799(x21)
	or x28, x23, x23
	and x5, x30, x12
	srai x9, x5, 17
	or x23, x5, x31
	bne x0, x0, crash_forward
	bltu x16, x17, crash_forward
	la x1, test_memory+2171
	xori x24, x2, -730
	blt x5, x23, crash_backward
	addi x16, x0, -1738
	or x17, x3, x3
	lhu x30, -473(x4)
	xor x19, x11, x11
	sraiw x19, x26, 0
	sraiw x7, x20, 28
	addi x20, x0, 1013
	addi x22, x0, 1
	sb x24, -1695(x1)
	addi x24, x0, 0
	sll x22, x22, 63
	addi x9, x0, 1465
	addi x23, x0, 0
	srl x29, x29, x29
	andi x17, x24, -61
	addi x14, x25, 1852
	addi x19, x0, -1780
	addi x10, x0, -1
	blt x0, x0, crash_forward
	addi x26, x0, 1
	la x31, test_memory+24
	addi x28, x0, 871
	la x3, test_memory-711
	lb x12, 737(x31)
	lw x8, 1023(x3)
	add x5, x0, x16
	addi x18, x0, 1119
	xor x10, x10, x22
	and x25, x18, x10
	addi x27, x20, 544
	sll x26, x26, 63
	slt x21, x16, x28
	addi x31, x0, 289
	srlw x6, x9, x18
	or x4, x2, x29
	addi x8, x0, -564
	addi x30, x0, 1587
	addi x7, x30, 1106
	blt x27, x20, crash_backward
	sll x5, x31, x8
	la x4, test_memory+612
	addi x24, x0, 710
	add x23, x19, x24
	addi x8, x0, 1
	sllw x18, x13, x31
	lh x6, 382(x4)
	or x9, x6, x6
	slt x19, x11, x1
	or x13, x25, x22
	la x4, test_memory+1503
	addi x24, x0, -1156
	addi x11, x0, -1
	addi x1, x0, 1504
	sll x8, x8, 63
	addi x20, x0, -1
	sra x9, x17, x17
	la x19, test_memory+2016
	addi x27, x0, 1845
	xor x20, x20, x8
	xor x11, x11, x26
	and x23, x23, x20
	addi x14, x0, 231
	and x15, x3, x11
	sw x29, -1536(x19)
	sub x31, x24, x27
	addi x3, x1, 873
	lhu x6, -1021(x4)
	bgeu x25, x13, crash_backward
	or x2, x14, x26
	addi x17, x0, 1357
	sltu x29, x14, x17
	addi x28, x0, 1
	or x5, x23, x8
	sll x28, x28, 63
	addi x16, x0, -1
	xor x16, x16, x28
	and x12, x6, x16
	or x21, x20, x28
	addi x9, x0, -593
	addi x6, x0, -1744
	lui x18, 451472
	addi x29, x0, 52
	addi x31, x0, -79
	sltu x13, x5, x3
	addi x16, x0, 1524
	sub x25, x3, x3
	addi x26, x0, 1319
	addi x24, x9, -1447
	addi x28, x0, 1647
	addi x17, x6, -290
	xor x10, x28, x28
	slt x3, x16, x16
	sra x7, x29, x29
	sub x30, x10, x10
	bgeu x24, x9, crash_forward
	sll x27, x21, x21
	sllw x21, x31, x31
	la x12, test_memory+2022
	addi x2, x0, -2018
	addi x14, x0, -833
	addi x15, x0, 1012
	addi x20, x0, -1286
	sd x25, -1646(x12)
	and x11, x26, x15
	addi x1, x14, -1195
	bgeu x1, x14, crash_forward
	sllw x23, x2, x20
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xa3185a3c2d258f19
reg_x1_init:	.dword 0x0000000000000000
reg_x2_init:	.dword 0x1ac23316657e39ee
reg_x3_init:	.dword 0xffffffffffffff84
reg_x4_init:	.dword 0xc26dfc09cbdf61bf
reg_x5_init:	.dword 0xffffffffffffffff
reg_x6_init:	.dword 0x2fa788265dfded3b
reg_x7_init:	.dword 0xffffffffffffffff
reg_x8_init:	.dword 0x365e73ffccc710c9
reg_x9_init:	.dword 0xffffffffffffffff
reg_x10_init:	.dword 0x660bd78a148dcc50
reg_x11_init:	.dword 0xffffffffffffffff
reg_x12_init:	.dword 0x0000000000000000
reg_x13_init:	.dword 0xffffffffffffff80
reg_x14_init:	.dword 0xffffffffffffff80
reg_x15_init:	.dword 0x650f5f08a8fe3aa5
reg_x16_init:	.dword 0xffffffffffffffff
reg_x17_init:	.dword 0xffffffff80000006
reg_x18_init:	.dword 0x0000000000000000
reg_x19_init:	.dword 0xa03deb84aa2b0fb0
reg_x20_init:	.dword 0x3aeddaecbf89ac1e
reg_x21_init:	.dword 0xb61c75216ab3f974
reg_x22_init:	.dword 0x93060f6c7eba5ee9
reg_x23_init:	.dword 0xffffffff80000001
reg_x24_init:	.dword 0x59ecbdbcaef5d444
reg_x25_init:	.dword 0x1362678f2f12a43e
reg_x26_init:	.dword 0xffffffffffff8003
reg_x27_init:	.dword 0x3a27206bf5f497ff
reg_x28_init:	.dword 0x6ffbf23cf0552673
reg_x29_init:	.dword 0xffffffffffffff85
reg_x30_init:	.dword 0xdca339263c7c0b18
reg_x31_init:	.dword 0xffffffff80000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xa5637689063323c7
reg_x1_output:	.dword 0xae8c7434b5c6df6f
reg_x2_output:	.dword 0xae6b256923742390
reg_x3_output:	.dword 0x4a85e2f5068675c1
reg_x4_output:	.dword 0x73a421ccaf59bc2b
reg_x5_output:	.dword 0xf23cd970a8caa48c
reg_x6_output:	.dword 0x2a5a7bda8fc31895
reg_x7_output:	.dword 0x1dc6f89df8ad7c1d
reg_x8_output:	.dword 0x7094411f235358fe
reg_x9_output:	.dword 0x0000ba0cacf4759f
reg_x10_output:	.dword 0xc4b4868a608c6e74
reg_x11_output:	.dword 0x8850b393992997f5
reg_x12_output:	.dword 0x8cb68ebc4d0f7de1
reg_x13_output:	.dword 0xd2e8f12cc66195ca
reg_x14_output:	.dword 0xb3fe90853b8bfe37
reg_x15_output:	.dword 0x4ca9891d14fd38e5
reg_x16_output:	.dword 0x1a91e1a901c605e9
reg_x17_output:	.dword 0x5c55ce583fc5aec1
reg_x18_output:	.dword 0x456089e321af7b9c
reg_x19_output:	.dword 0x81ffc52286a88a5c
reg_x20_output:	.dword 0x8166822be8171e1e
reg_x21_output:	.dword 0x95a3bdfaa6518f4f
reg_x22_output:	.dword 0x0b0b243c342b9797
reg_x23_output:	.dword 0x49283ab48f2d9a1e
reg_x24_output:	.dword 0x9c898e4fd4400ffd
reg_x25_output:	.dword 0xde9481e59b4339d1
reg_x26_output:	.dword 0xe194ff2db922f2cd
reg_x27_output:	.dword 0x53928483b402cec3
reg_x28_output:	.dword 0xd0186e66392edbf7
reg_x29_output:	.dword 0x2d76f9cce8f942b9
reg_x30_output:	.dword 0x6e20e4d8f248e019
reg_x31_output:	.dword 0xcf54d566b36dae36

// Memory Blocks
	.align 8
test_memory:
	.dword 0x7ff6597ebd7ea3f0, 0x744f7bc86aa37f0c
	.dword 0x5f5f16647b29f70a, 0xcdb158d6f5fff436
	.dword 0x8245e9f21aa6e5c0, 0x0482bcd35eeb02e5
	.dword 0x2bbba87630047663, 0xc3b72373a130f8d8
	.dword 0x5ad0c1dc2be785b5, 0xa8c5494eaf2b6ff0
	.dword 0x3f4befbd115a769b, 0x56e0b37d944d6703
	.dword 0x890f3f9b79bba90f, 0xa3518d7e8e1793ef
	.dword 0x8c4cfd6a33a7ec5b, 0x41d2015bc63742f2
	.dword 0xf6c242519ddd6083, 0xbca66e0b91e35739
	.dword 0x39452bb28de67b02, 0xbf9820190fb040b6
	.dword 0xa150fe68932422b9, 0x15507082174cfb36
	.dword 0xb81aba5064c91724, 0x960c6de26b286ab2
	.dword 0xec5ce20a63c816ce, 0x7b7f73d14c1fa8e4
	.dword 0xe9b17aff23d97907, 0x8a3d5489184b181d
	.dword 0xa83d89a4afd42ed3, 0x9b6af8cbb9094f55
	.dword 0x11e18e00b0e15f24, 0xc3fe9a04dec43383
	.dword 0xbb56c46c34d1124c, 0x7fc6faac83ddd22f
	.dword 0x47d92e99a949a0ac, 0x680340efe0f7d144
	.dword 0x897aa8d7d6f2d8b1, 0x7dcb578eeca1882a
	.dword 0xbf3b8f9384591001, 0x7a22f9070ca61614
	.dword 0xa8c9b921ab5393f0, 0xd68fc8f2b8f50996
	.dword 0xbe8ec7bd487d2d38, 0xebad1fae3cb56d79
	.dword 0x2fc317cb2a04aae9, 0x0dbe6c3c5abc4ed2
	.dword 0x57cace645d06a89e, 0x93eb50698c9d1051
	.dword 0xec76cc14fe0103f1, 0x33dedb32a01b1ed6
	.dword 0x001b87e00503b530, 0xb33585643329db49
	.dword 0x210c1686e049ff50, 0x28bbd482a420cdaa
	.dword 0xf427e2093b222b21, 0x8b39c7ed77977566
	.dword 0xf60dd56b8ab941c3, 0x28a5743c88bd4aed
	.dword 0xee7000bcf9c37a58, 0x895970f3f937c680
	.dword 0xaf2ef95516514efa, 0xcd91fc563bd9804f
	.dword 0x15947a5d75ac6cef, 0x7a3df9918f22bdc2
	.dword 0xd37909930816f41b, 0x0b5f2d252aad0016
	.dword 0x3098a44d74fab9b5, 0x40075b7f7aa8682c
	.dword 0xe616b8bde6bd823d, 0x94b62de54fab039d
	.dword 0x1f71ef76b74a66ad, 0x8eb60198847f5711
	.dword 0x012c893072afd8ee, 0x8454053978a0b9d1
	.dword 0x4e7654c95734fb8d, 0x44b24863e1e95699
	.dword 0xa071818a814040ae, 0x1cb8a1a2fbdee5b2
	.dword 0x5b7bd1b228948440, 0x0f938e856c487440
	.dword 0x2d79f12f0b091572, 0xee7e720b5488ccd8
	.dword 0x6bbaf4a95a346364, 0x2f88d545cade5555
	.dword 0x6be644c534c84121, 0xbbdc8e3e476275ec
	.dword 0xc1c679a60cd9f4cd, 0x5604f115abafdd7c
	.dword 0xb7e7eab6f93f861a, 0xfe156f6d42b8372a
	.dword 0xfb29f6a724cf0000, 0xce904a060dc7252d
	.dword 0x25ce47b4a1e399ad, 0x07d438a9a53994e6
	.dword 0xfd81982d5657fab9, 0x5ae22c4bec4dc033
	.dword 0xf58dbb316b640e9d, 0x5dba8f6e78e17003
	.dword 0x031cedbc50c01b65, 0x6da3a8c44f39542d
	.dword 0x7972b3e38a560fa5, 0x04a10415f845847d
	.dword 0x677ec65df6e53ba9, 0xb97e0569e3847f10
	.dword 0x8372d447438be9ef, 0x334c0a60e5e737e1
	.dword 0xcc4c1d20c76d8ad9, 0x5c56bde0c22e0da3
	.dword 0xa8ce271af2e3679e, 0x0b9781f4565fb7d0
	.dword 0xef7c1593f2111081, 0x48db13eefa788201
	.dword 0x2ff263e0aa94fa46, 0xbd5aced60f816880
	.dword 0x13db084e1aa0fee0, 0xf2bd2ffdc923ea1b
	.dword 0x48d243628c4db56e, 0xbb8781f407c8a33a
	.dword 0x2d329f6775b6d568, 0xac44d19d239c0634
	.dword 0x4422e4291c9e1915, 0x7a44919de2b5c4dd
	.dword 0x19a902fcbe355340, 0x96158ffd6354bf63
	.dword 0xda313f049887ac2a, 0x830822087fea8c5a
	.dword 0x122915b17e0539c2, 0x7c4caa756aceee14

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
