before_script:
  # paths to local or network installations (the riscv toolchain and 
  # verilator are not built in the ci job as in travis)
  - export QUESTASIM_HOME=/usr/pack/modelsim-10.6b-kgf/questasim/
  - export QUESTASIM_VERSION=-10.6b
  - export QUESTASIM_FLAGS=-noautoldlibpath
  - export CXX=g++-7.2.0 CC=gcc-7.2.0
  - export RISCV=/usr/scratch2/larain1/gitlabci/riscv_install
  - export VERILATOR_ROOT=/usr/scratch2/larain1/gitlabci/verilator-3.924
  # setup dependent paths
  - export PATH=${RISCV}/bin:$VERILATOR_ROOT/bin:${PATH}
  - export LIBRARY_PATH=$RISCV/lib
  - export LD_LIBRARY_PATH=$RISCV/lib:/usr/pack/gcc-7.2.0-af/linux-x64/lib64/
  - export C_INCLUDE_PATH=$RISCV/include:$VERILATOR_ROOT/include:/usr/pack/gcc-7.2.0-af/linux-x64/include
  - export CPLUS_INCLUDE_PATH=$RISCV/include:$VERILATOR_ROOT/include:/usr/pack/gcc-7.2.0-af/linux-x64/include
  # number of parallel jobs to use for make commands and simulation
  - export NUM_JOBS=4
  - ci/make-tmp.sh
  - git submodule update --init --recursive
  
variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test_std
  - test_serpent

###################################
# prepare

build:
  stage: build
  script:
    - ci/build-riscv-tests.sh
  artifacts:
      paths:
        - tmp 

###################################
# tests with standard cache system

# rv64ui-p-* and rv64ui-v-* tests    
asm-quest:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-asm-tests questa_version=$QUESTASIM_VERSION
  dependencies:
    - build
    
bench-quest:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-benchmarks questa_version=$QUESTASIM_VERSION
  dependencies:
    - build    

# rv64ui-p-* tests
asm1-ver:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-asm-tests1-verilator verilator=$VERILATOR_ROOT/bin/verilator
  dependencies:
    - build

# rv64ui-v-* tests
asm2-ver:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-asm-tests2-verilator verilator=$VERILATOR_ROOT/bin/verilator
  dependencies:
    - build    

bench-ver:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-benchmarks-verilator verilator=$VERILATOR_ROOT/bin/verilator
  dependencies:
    - build

###################################
# tests with serpent cache system

# rv64ui-p-* and rv64ui-v-* tests    
serp-asm-quest:
  stage: test_serpent
  script:
    - make -j${NUM_JOBS} run-asm-tests questa_version=$QUESTASIM_VERSION define=SERPENT_PULP+AXI64_CACHE_PORTS
  dependencies:
    - build
    
serp-bench-quest:
  stage: test_serpent
  script:
    - make -j${NUM_JOBS} run-benchmarks questa_version=$QUESTASIM_VERSION define=SERPENT_PULP+AXI64_CACHE_PORTS
  dependencies:
    - build    

# rv64ui-p-* tests
serp-asm1-ver:
  stage: test_serpent
  script:
    - make -j${NUM_JOBS} run-asm-tests1-verilator verilator=$VERILATOR_ROOT/bin/verilator define=SERPENT_PULP+AXI64_CACHE_PORTS
  dependencies:
    - build

# rv64ui-v-* tests
serp-asm2-ver:
  stage: test_serpent
  script:
    - make -j${NUM_JOBS} run-asm-tests2-verilator verilator=$VERILATOR_ROOT/bin/verilator define=SERPENT_PULP+AXI64_CACHE_PORTS
  dependencies:
    - build    

serp-bench-ver:
  stage: test_serpent
  script:
    - make -j${NUM_JOBS} run-benchmarks-verilator verilator=$VERILATOR_ROOT/bin/verilator define=SERPENT_PULP+AXI64_CACHE_PORTS
  dependencies:
    - build

serp-icache-quest:
  stage: test_serpent
  script:
    - cd tb/tb_serpent_icache/
    - make simc
    - "grep 'CI: PASSED' summary.rep"
  dependencies:
    - build    








